<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <Description>Razor is a markup syntax for adding server-side logic to web pages. This package contains MSBuild support for Razor.</Description>

    <TargetFrameworks>netcoreapp2.0;net46</TargetFrameworks>

    <EnableDefaultItems>false</EnableDefaultItems>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <EnableApiCheck>false</EnableApiCheck>

    <NuspecFile>$(MSBuildProjectName).nuspec</NuspecFile>
  </PropertyGroup>

  <!-- These are binaries from other projects that need to be included in the package \ SDK. -->
  <PropertyGroup>
    <ToolProject>..\Microsoft.AspNetCore.Razor.Tools\Microsoft.AspNetCore.Razor.Tools.csproj</ToolProject>
    <TaskProject>Microsoft.AspNetCore.Razor.Tasks</TaskProject>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\$(TaskProject)\$(TaskProject).csproj" ReferenceOutputAssembly="false" />
    <ProjectReference Include="$(ToolProject)" ReferenceOutputAssembly="false" Condition="'$(TargetFramework)' == 'netcoreapp2.0'" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)'==''">
    <!-- Binaries produced in this repo -->
    <SignedPackageFile Include="tasks/net46/Microsoft.AspNetCore.Razor.Tasks.dll" Certificate="$(AssemblySigningCertName)" />
    <SignedPackageFile Include="tasks/netstandard2.0/Microsoft.AspNetCore.Razor.Tasks.dll" Certificate="$(AssemblySigningCertName)" />
    <SignedPackageFile Include="tools/rzc.dll" Certificate="$(AssemblySigningCertName)" />
    <SignedPackageFile Include="tools/Microsoft.AspNetCore.Razor.Language.dll" Certificate="$(AssemblySigningCertName)" />
    <SignedPackageFile Include="tools/Microsoft.CodeAnalysis.Razor.dll" Certificate="$(AssemblySigningCertName)" />

    <!-- Third-party assemblies -->
    <SignedPackageFile Include="tools/Newtonsoft.Json.dll" Certificate="3PartyDual" />

    <!-- Binaries that should be signed by corefx/roslyn -->
    <ExcludePackageFileFromSigning Include="tools/Microsoft.CodeAnalysis.CSharp.dll" />
    <ExcludePackageFileFromSigning Include="tools/Microsoft.CodeAnalysis.dll" />
    <ExcludePackageFileFromSigning Include="tools/runtimes/unix/lib/netstandard1.3/System.Text.Encoding.CodePages.dll" />
    <ExcludePackageFileFromSigning Include="tools/runtimes/win/lib/netstandard1.3/System.Text.Encoding.CodePages.dll" />
  </ItemGroup>

  <Target Name="PopulateNuspec" BeforeTargets="GenerateNuspec">

    <PropertyGroup>
      <!-- Make sure we create a symbols.nupkg. -->
      <IncludeSymbols>true</IncludeSymbols>

      <!-- RepositoryCommit is only available when "build" runs, but not during dotnet pack -->
      <RepositoryCommit Condition="'$(RepositoryCommit)' == ''">unknown</RepositoryCommit>

      <NuspecProperties>
        id=$(PackageId);
        version=$(PackageVersion);
        authors=$(Authors);
        description=$(Description);
        tags=$(PackageTags.Replace(';', ' '));
        licenseUrl=$(PackageLicenseUrl);
        projectUrl=$(PackageProjectUrl);
        iconUrl=$(PackageIconUrl);
        repositoryUrl=$(RepositoryUrl);
        repositoryCommit=$(RepositoryCommit);
        copyright=$(Copyright);

        <!-- Include the assembly and symbols from the tasks project -->
        TaskAssemblyNet46=$(OutputPath)tasks\net46\$(TaskProject).dll;
        TaskSymbolNet46=$(OutputPath)tasks\net46\$(TaskProject).pdb;
        TaskAssemblyNetStandard=$(OutputPath)tasks\netstandard2.0\$(TaskProject).dll;
        TaskSymbolNetStandard=$(OutputPath)tasks\netstandard2.0\$(TaskProject).pdb;

        <!-- Include the assembly and symbols from the tools project -->
        ToolFiles=$(OutputPath)tools\**\*;
      </NuspecProperties>
    </PropertyGroup>
  </Target>

  <Target Name="LayoutDependencies" AfterTargets="Build" BeforeTargets="PopulateNuspec" Condition="'$(IsInnerBuild)'!='true'">
    <RemoveDir Directories="$(OutputPath)tools\" />
    <MSBuild
      Projects="$(ToolProject)"
      Properties="PublishDir=$(MSBuildProjectDirectory)\$(OutputPath)tools\;TargetFramework=netcoreapp2.0"
      Targets="Publish" />

    <ItemGroup>
      <_RazorTool Include="$(OutputPath)tools\**\*" />
    </ItemGroup>

    <Error Text="_RazorTool is empty. This is a bug" Condition="'@(_RazorTool)'==''" />
  </Target>

</Project>
