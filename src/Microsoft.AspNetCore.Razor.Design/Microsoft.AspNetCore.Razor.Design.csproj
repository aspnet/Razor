<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <Description>Razor is a markup syntax for adding server-side logic to web pages. This package contains MSBuild support for Razor.</Description>
    <TargetFrameworks>netcoreapp2.0</TargetFrameworks>

    <!-- This project doesn't have any code, so don't include it in the .nupkg -->
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <EnableDefaultItems>false</EnableDefaultItems>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>

    <NuspecFile>$(MSBuildProjectName).nuspec</NuspecFile>
  </PropertyGroup>

  <!--
    Building this package is somewhat complicated because we need to Publish some other projects
    that have different TFM's including one with multiple TFMs.

    We then need to include the output of those projects in our output directory (where it will be used
    by tests) and in the nukpg.
  -->
  <!-- These are tools that need to be included in the package. -->

  <PropertyGroup>
    <ToolProject>..\Microsoft.AspNetCore.Razor.Tools\Microsoft.AspNetCore.Razor.Tools.csproj</ToolProject>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="$(ToolProject)" ReferenceOutputAssembly="false" Condition="'$(TargetFramework)' == 'netcoreapp2.0'" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)'==''">
    <!-- Binaries produced in this project -->
    <SignedPackageFile Include="$(MSBuildProjectDirectory)\$(OutputPath)\tools/rzc.dll" Certificate="$(AssemblySigningCertName)" />

    <!-- Third-party assemblies -->
    <SignedPackageFile Include="$(MSBuildProjectDirectory)\$(OutputPath)\tools/Newtonsoft.Json.dll" Certificate="$(AssemblySigning3rdPartyCertName)" />

    <!-- Binaries that should be signed by corefx/roslyn -->
    <ExcludePackageFileFromSigning Include="$(MSBuildProjectDirectory)\$(OutputPath)\tools/Microsoft.CodeAnalysis.CSharp.dll" />
    <ExcludePackageFileFromSigning Include="$(MSBuildProjectDirectory)\$(OutputPath)\tools/Microsoft.CodeAnalysis.dll" />
    <ExcludePackageFileFromSigning Include="$(MSBuildProjectDirectory)\$(OutputPath)\tools/runtimes/unix/lib/netstandard1.3/System.Text.Encoding.CodePages.dll" />
    <ExcludePackageFileFromSigning Include="$(MSBuildProjectDirectory)\$(OutputPath)\tools/runtimes/win/lib/netstandard1.3/System.Text.Encoding.CodePages.dll" />
  </ItemGroup>

  <Target Name="PopulateNuspec" BeforeTargets="GenerateNuspec">

    <PropertyGroup>
      <!-- Make sure we create a symbols.nupkg. -->
      <IncludeSymbols>true</IncludeSymbols>

      <!-- RepositoryCommit is only available when "build" runs, but not during dotnet pack -->
      <RepositoryCommit Condition="'$(RepositoryCommit)' == ''">unknown</RepositoryCommit>

      <NuspecProperties>
        id=$(PackageId);
        version=$(PackageVersion);
        authors=$(Authors);
        description=$(Description);
        tags=$(PackageTags.Replace(';', ' '));
        licenseUrl=$(PackageLicenseUrl);
        projectUrl=$(PackageProjectUrl);
        iconUrl=$(PackageIconUrl);
        repositoryUrl=$(RepositoryUrl);
        repositoryCommit=$(RepositoryCommit);
        copyright=$(Copyright);

        <!-- Include the assembly and symbols from the tools project -->
        ToolFiles=$(OutputPath)tools\**\*;
      </NuspecProperties>
    </PropertyGroup>
  </Target>

  <Target Name="LayoutDependencies" AfterTargets="Build" BeforeTargets="PopulateNuspec">
    <RemoveDir Directories="$(OutputPath)tools\" />
    <MSBuild Projects="$(ToolProject)" Properties="PublishDir=$(MSBuildProjectDirectory)\$(OutputPath)tools\;TargetFramework=netcoreapp2.0" Targets="Publish" />

    <ItemGroup>
      <_RazorTool Include="$(OutputPath)tools\**\*" />
    </ItemGroup>

    <Error Text="_RazorTool is empty. This is a bug" Condition="'@(_RazorTool)'==''" />
  </Target>

</Project>
