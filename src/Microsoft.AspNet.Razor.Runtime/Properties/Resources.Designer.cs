// <auto-generated />
namespace Microsoft.AspNet.Razor.Runtime
{
    using System.Globalization;
    using System.Reflection;
    using System.Resources;

    internal static class Resources
    {
        private static readonly ResourceManager _resourceManager
            = new ResourceManager("Microsoft.AspNet.Razor.Runtime.Resources", typeof(Resources).GetTypeInfo().Assembly);

        /// <summary>
        /// You cannot have multiple TagHelpers that target the same HTML attribute name with different types. TagHelper '{0}' targets the '{1}' HTML attribute with type '{2}' which conflicts with TagHelper '{3}' that expects the '{1}' attribute to be of type '{4}'.
        /// </summary>
        internal static string TagHelpers_CannotHaveConflictingAttributeTypes
        {
            get { return GetString("TagHelpers_CannotHaveConflictingAttributeTypes"); }
        }

        /// <summary>
        /// You cannot have multiple TagHelpers that target the same HTML attribute name with different types. TagHelper '{0}' targets the '{1}' HTML attribute with type '{2}' which conflicts with TagHelper '{3}' that expects the '{1}' attribute to be of type '{4}'.
        /// </summary>
        internal static string FormatTagHelpers_CannotHaveConflictingAttributeTypes(object p0, object p1, object p2, object p3, object p4)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("TagHelpers_CannotHaveConflictingAttributeTypes"), p0, p1, p2, p3, p4);
        }

        /// <summary>
        /// You cannot call '{0}' without first calling '{1}' on the TagHelperScopeManager.
        /// </summary>
        internal static string ScopeManager_EndCannotBeCalledWithoutACallToBegin
        {
            get { return GetString("ScopeManager_EndCannotBeCalledWithoutACallToBegin"); }
        }

        /// <summary>
        /// You cannot call '{0}' without first calling '{1}' on the TagHelperScopeManager.
        /// </summary>
        internal static string FormatScopeManager_EndCannotBeCalledWithoutACallToBegin(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("ScopeManager_EndCannotBeCalledWithoutACallToBegin"), p0, p1);
        }

        private static string GetString(string name, params string[] formatterNames)
        {
            var value = _resourceManager.GetString(name);

            System.Diagnostics.Debug.Assert(value != null);

            if (formatterNames != null)
            {
                for (var i = 0; i < formatterNames.Length; i++)
                {
                    value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
                }
            }

            return value;
        }
    }
}
