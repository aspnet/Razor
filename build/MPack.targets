<Project>
  <PropertyGroup>
    <PackageDependsOn Condition="'$(OS)'=='Windows_NT'">$(PackageDependsOn);GenerateMPack</PackageDependsOn>
    <GetArtifactInfoDependsOn Condition="'$(OS)'=='Windows_NT'">$(GetArtifactInfoDependsOn);GetMPackArtifactInfo</GetArtifactInfoDependsOn>
    <AddinName>Microsoft.VisualStudio.Mac.RazorAddin</AddinName>
    <AddinDirectory>$(RepositoryRoot)tooling\$(AddinName)\</AddinDirectory>
    <MPackArtifactCategory>shipoob</MPackArtifactCategory>

    <MPackIntermediateOutputPath>$(IntermediateDir)mpack\</MPackIntermediateOutputPath>
    <AddinOutputPath>$(AddinDirectory)bin\$(Configuration)\net461\</AddinOutputPath>
    <LanguageServiceName>Microsoft.VisualStudio.Mac.LanguageServices.Razor</LanguageServiceName>
    <LanguageServiceOutputPath>$(RepositoryRoot)src\$(LanguageServiceName)\bin\$(Configuration)\net461\</LanguageServiceOutputPath>
    <MPackName>$(AddinName)_$(AddinVersion)</MPackName>
    <MPackFileName>$(MPackName).mpack</MPackFileName>
    <MPackOutputPath>$(BuildDir)$(MPackFileName)</MPackOutputPath>
    <MPackZipFile>$(BuildDir)$(MPackName).zip</MPackZipFile>
    <MPackManifest>$(AddinDirectory)Properties\_Manifest.addin.xml</MPackManifest>
    <AddinInfoFilePath>$(MPackIntermediateOutputPath)addin.info</AddinInfoFilePath>
  </PropertyGroup>

  <Import Project="$(AddinDirectory)AddinMetadata.props" />

  <!-- This target is required so KoreBuild can generate a bill of materials with relevant information about the .mpack files. -->
  <Target Name="GetMPackArtifactInfo">
    <ItemGroup>
      <ArtifactInfo Include="$(MPackOutputPath)">
        <ArtifactType>MPackFile</ArtifactType>
        <PackageId>$(AddinName)</PackageId>
        <Version>$(AddinVersion)</Version>
        <Category>$(MPackArtifactCategory)</Category>
      </ArtifactInfo>

      <FilesToExcludeFromSigning Include="$(MPackOutputPath)" />
    </ItemGroup>
  </Target>

  <Target
    Name="GenerateMPack"
    Condition="'$(OS)'=='Windows_NT'">
    <!--
      In our case the mpack archive requires the following:
      1. An addin.info
      2. An addin binary (Microsoft.VisualStudio.Mac.RazorAddin.dll)
        a. _Manifest.addin.xml embedded
        b. Addin assembly attributes for metadata 
      3. All language service binaries
    -->

  
    <MakeDir Directories="$(MPackIntermediateOutputPath)" Condition="!Exists('$(MPackIntermediateOutputPath)')" />

    <!-- We need to resolve the language service assemblies to generate an addin.info for the mpack -->
    <XmlPeek XmlInputPath="$(MPackManifest)" Query="/ExtensionModel/Runtime/Import/@assembly">
      <Output TaskParameter="Result" ItemName="LanguageServiceAssemblies" />
    </XmlPeek>

    <ItemGroup>
      <AddinInfoLines Include="&lt;Addin id=&quot;$(AddinId)&quot; namespace=&quot;$(AddinNamespace)&quot; version=&quot;$(AddinVersion)&quot; name=&quot;$(AddinDetailedName)&quot; author=&quot;$(Authors)&quot; description=&quot;$(Description)&quot; category=&quot;$(AddinCategory)&quot;&gt;" />
      <AddinInfoLines Include="  &lt;Runtime&gt;" />
      <AddinInfoLines Include="    &lt;Import assembly=&quot;%(LanguageServiceAssemblies.Identity)&quot; /&gt;" />
      <AddinInfoLines Include="    &lt;Import assembly=&quot;$(AddinName).dll&quot; /&gt;" />
      <AddinInfoLines Include="  &lt;/Runtime&gt;" />
      <AddinInfoLines Include="  &lt;Dependencies&gt;" />
      <AddinInfoLines Include="  &lt;/Dependencies&gt;" />
      <AddinInfoLines Include="&lt;/Addin&gt;" />
    </ItemGroup>

    <!-- Generate the addin.info and gather sources for mpack zipping-->
    <WriteLinesToFile File="$(AddinInfoFilePath)" Lines="@(AddinInfoLines)" Overwrite="true" />
    <Copy SourceFiles="$(LanguageServiceOutputPath)\%(LanguageServiceAssemblies.Identity)" DestinationFolder="$(MPackIntermediateOutputPath)" />
    <Copy SourceFiles="$(AddinOutputPath)$(AddinName).dll" DestinationFolder="$(MPackIntermediateOutputPath)" />

    <!-- We cannot use the ZipArchive task due to how it functions in CoreCLR. The archive it generates is unreadable by Visual Studio for Mac. -->
    <Exec Command="powershell.exe -NonInteractive -command &quot;&amp; { Add-Type -AssemblyName System.IO.Compression.FileSystem; [System.IO.Compression.ZipFile]::CreateFromDirectory('$(MPackIntermediateOutputPath)', '$(MPackOutputPath)') } &quot;" />
  </Target>

</Project>
