CSharpCodeBlock - [0..115)::115 - [@foo().bar("bi\"z", 4)("chained method; call").baz(@"bo""z", '\'', () => { return 4; }, (4+5+new { foo = bar[4] }))]
    CSharpImplicitExpression - [0..115)::115
        CSharpTransition - [0..1)::1 - Gen<None> - SpanEditHandler;Accepts:None
            Transition;[@];
        CSharpImplicitExpressionBody - [1..115)::114
            CSharpCodeBlock - [1..115)::114
                CSharpExpressionLiteral - [1..115)::114 - [foo().bar("bi\"z", 4)("chained method; call").baz(@"bo""z", '\'', () => { return 4; }, (4+5+new { foo = bar[4] }))] - Gen<Expr> - ImplicitExpressionEditHandler;Accepts:NonWhitespace;ImplicitExpression[RTD];K14
                    Identifier;[foo];
                    LeftParenthesis;[(];
                    RightParenthesis;[)];
                    Dot;[.];
                    Identifier;[bar];
                    LeftParenthesis;[(];
                    StringLiteral;["bi\"z"];
                    Comma;[,];
                    Whitespace;[ ];
                    IntegerLiteral;[4];
                    RightParenthesis;[)];
                    LeftParenthesis;[(];
                    StringLiteral;["chained method; call"];
                    RightParenthesis;[)];
                    Dot;[.];
                    Identifier;[baz];
                    LeftParenthesis;[(];
                    StringLiteral;[@"bo""z"];
                    Comma;[,];
                    Whitespace;[ ];
                    CharacterLiteral;['\''];
                    Comma;[,];
                    Whitespace;[ ];
                    LeftParenthesis;[(];
                    RightParenthesis;[)];
                    Whitespace;[ ];
                    GreaterThanEqual;[=>];
                    Whitespace;[ ];
                    LeftBrace;[{];
                    Whitespace;[ ];
                    Keyword;[return];
                    Whitespace;[ ];
                    IntegerLiteral;[4];
                    Semicolon;[;];
                    Whitespace;[ ];
                    RightBrace;[}];
                    Comma;[,];
                    Whitespace;[ ];
                    LeftParenthesis;[(];
                    IntegerLiteral;[4];
                    Plus;[+];
                    IntegerLiteral;[5];
                    Plus;[+];
                    Keyword;[new];
                    Whitespace;[ ];
                    LeftBrace;[{];
                    Whitespace;[ ];
                    Identifier;[foo];
                    Whitespace;[ ];
                    Assign;[=];
                    Whitespace;[ ];
                    Identifier;[bar];
                    LeftBracket;[[];
                    IntegerLiteral;[4];
                    RightBracket;[]];
                    Whitespace;[ ];
                    RightBrace;[}];
                    RightParenthesis;[)];
                    RightParenthesis;[)];
