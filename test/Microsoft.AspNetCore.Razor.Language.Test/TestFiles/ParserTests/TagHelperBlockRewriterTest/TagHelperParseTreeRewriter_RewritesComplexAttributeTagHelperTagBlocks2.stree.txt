Markup block - Gen<None> - 153 - (0:0,0)
    Tag block - Gen<TagHelper> - 153 - (0:0,0) - p - ptaghelper
        StartTagAndEndTag - <p class="@do { var foo = bar; <text>Foo</text> foo++; } while (foo<bar>);" style='@do { var foo = bar; <text>Foo</text> foo++; } while (foo<bar>);'> ... </p>
        class - DoubleQuotes
            Markup block - Gen<None> - 64 - (10:0,10)
                Markup block - Gen<DynAttr:@(10:0,10)> - 64 - (10:0,10)
                    Statement block - Gen<None> - 64 - (10:0,10)
                        Transition span - Gen<None> - [@] - SpanEditHandler;Accepts:None - (10:0,10) - Tokens:1
                            SyntaxKind.Transition;[@];
                        Code span - Gen<Stmt> - [do { var foo = bar; ] - SpanEditHandler;Accepts:Any - (11:0,11) - Tokens:13
                            SyntaxKind.Keyword;[do];
                            SyntaxKind.Whitespace;[ ];
                            SyntaxKind.LeftBrace;[{];
                            SyntaxKind.Whitespace;[ ];
                            SyntaxKind.Identifier;[var];
                            SyntaxKind.Whitespace;[ ];
                            SyntaxKind.Identifier;[foo];
                            SyntaxKind.Whitespace;[ ];
                            SyntaxKind.Assign;[=];
                            SyntaxKind.Whitespace;[ ];
                            SyntaxKind.Identifier;[bar];
                            SyntaxKind.Semicolon;[;];
                            SyntaxKind.Whitespace;[ ];
                        Markup block - Gen<None> - 16 - (31:0,31)
                            Tag block - Gen<None> - 6 - (31:0,31)
                                Transition span - Gen<None> - [<text>] - SpanEditHandler;Accepts:None - (31:0,31) - Tokens:3
                                    SyntaxKind.OpenAngle;[<];
                                    SyntaxKind.HtmlTextLiteral;[text];
                                    SyntaxKind.CloseAngle;[>];
                            Markup span - Gen<Markup> - [Foo] - SpanEditHandler;Accepts:None - (37:0,37) - Tokens:1
                                SyntaxKind.HtmlTextLiteral;[Foo];
                            Tag block - Gen<None> - 7 - (40:0,40)
                                Transition span - Gen<None> - [</text>] - SpanEditHandler;Accepts:None - (40:0,40) - Tokens:4
                                    SyntaxKind.OpenAngle;[<];
                                    SyntaxKind.ForwardSlash;[/];
                                    SyntaxKind.HtmlTextLiteral;[text];
                                    SyntaxKind.CloseAngle;[>];
                        Code span - Gen<Stmt> - [ foo++; } while (foo<bar>);] - SpanEditHandler;Accepts:None - (47:0,47) - Tokens:16
                            SyntaxKind.Whitespace;[ ];
                            SyntaxKind.Identifier;[foo];
                            SyntaxKind.Increment;[++];
                            SyntaxKind.Semicolon;[;];
                            SyntaxKind.Whitespace;[ ];
                            SyntaxKind.RightBrace;[}];
                            SyntaxKind.Whitespace;[ ];
                            SyntaxKind.Keyword;[while];
                            SyntaxKind.Whitespace;[ ];
                            SyntaxKind.LeftParenthesis;[(];
                            SyntaxKind.Identifier;[foo];
                            SyntaxKind.LessThan;[<];
                            SyntaxKind.Identifier;[bar];
                            SyntaxKind.GreaterThan;[>];
                            SyntaxKind.RightParenthesis;[)];
                            SyntaxKind.Semicolon;[;];
        style - SingleQuotes
            Markup block - Gen<None> - 64 - (83:0,83)
                Markup block - Gen<DynAttr:@(83:0,83)> - 64 - (83:0,83)
                    Statement block - Gen<None> - 64 - (83:0,83)
                        Transition span - Gen<None> - [@] - SpanEditHandler;Accepts:None - (83:0,83) - Tokens:1
                            SyntaxKind.Transition;[@];
                        Code span - Gen<Stmt> - [do { var foo = bar; ] - SpanEditHandler;Accepts:Any - (84:0,84) - Tokens:13
                            SyntaxKind.Keyword;[do];
                            SyntaxKind.Whitespace;[ ];
                            SyntaxKind.LeftBrace;[{];
                            SyntaxKind.Whitespace;[ ];
                            SyntaxKind.Identifier;[var];
                            SyntaxKind.Whitespace;[ ];
                            SyntaxKind.Identifier;[foo];
                            SyntaxKind.Whitespace;[ ];
                            SyntaxKind.Assign;[=];
                            SyntaxKind.Whitespace;[ ];
                            SyntaxKind.Identifier;[bar];
                            SyntaxKind.Semicolon;[;];
                            SyntaxKind.Whitespace;[ ];
                        Markup block - Gen<None> - 16 - (104:0,104)
                            Tag block - Gen<None> - 6 - (104:0,104)
                                Transition span - Gen<None> - [<text>] - SpanEditHandler;Accepts:None - (104:0,104) - Tokens:3
                                    SyntaxKind.OpenAngle;[<];
                                    SyntaxKind.HtmlTextLiteral;[text];
                                    SyntaxKind.CloseAngle;[>];
                            Markup span - Gen<Markup> - [Foo] - SpanEditHandler;Accepts:None - (110:0,110) - Tokens:1
                                SyntaxKind.HtmlTextLiteral;[Foo];
                            Tag block - Gen<None> - 7 - (113:0,113)
                                Transition span - Gen<None> - [</text>] - SpanEditHandler;Accepts:None - (113:0,113) - Tokens:4
                                    SyntaxKind.OpenAngle;[<];
                                    SyntaxKind.ForwardSlash;[/];
                                    SyntaxKind.HtmlTextLiteral;[text];
                                    SyntaxKind.CloseAngle;[>];
                        Code span - Gen<Stmt> - [ foo++; } while (foo<bar>);] - SpanEditHandler;Accepts:None - (120:0,120) - Tokens:16
                            SyntaxKind.Whitespace;[ ];
                            SyntaxKind.Identifier;[foo];
                            SyntaxKind.Increment;[++];
                            SyntaxKind.Semicolon;[;];
                            SyntaxKind.Whitespace;[ ];
                            SyntaxKind.RightBrace;[}];
                            SyntaxKind.Whitespace;[ ];
                            SyntaxKind.Keyword;[while];
                            SyntaxKind.Whitespace;[ ];
                            SyntaxKind.LeftParenthesis;[(];
                            SyntaxKind.Identifier;[foo];
                            SyntaxKind.LessThan;[<];
                            SyntaxKind.Identifier;[bar];
                            SyntaxKind.GreaterThan;[>];
                            SyntaxKind.RightParenthesis;[)];
                            SyntaxKind.Semicolon;[;];
