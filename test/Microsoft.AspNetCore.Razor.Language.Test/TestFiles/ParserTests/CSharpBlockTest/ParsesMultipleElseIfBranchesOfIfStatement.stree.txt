CSharpCodeBlock - [0..459)::459 - [if(int i = 0; i < 10; new Foo { Bar = "baz" }) {LF    Debug.WriteLine(@"foo } bar");LF} else if(int i = 0; i < 10; new Foo { Bar = "baz" }) {LF    Debug.WriteLine(@"bar } baz");LF} else if(int i = 0; i < 10; new Foo { Bar = "baz" }) {LF    Debug.WriteLine(@"bar } baz");LF} else if(int i = 0; i < 10; new Foo { Bar = "baz" }) {LF    Debug.WriteLine(@"bar } baz");LF} else if(int i = 0; i < 10; new Foo { Bar = "baz" }) {LF    Debug.WriteLine(@"bar } baz");LF}]
    CSharpTransition - [0..0)::0 - Gen<None> - SpanEditHandler;Accepts:None
        Transition;[<Missing>];
    CSharpStatementLiteral - [0..459)::459 - [if(int i = 0; i < 10; new Foo { Bar = "baz" }) {LF    Debug.WriteLine(@"foo } bar");LF} else if(int i = 0; i < 10; new Foo { Bar = "baz" }) {LF    Debug.WriteLine(@"bar } baz");LF} else if(int i = 0; i < 10; new Foo { Bar = "baz" }) {LF    Debug.WriteLine(@"bar } baz");LF} else if(int i = 0; i < 10; new Foo { Bar = "baz" }) {LF    Debug.WriteLine(@"bar } baz");LF} else if(int i = 0; i < 10; new Foo { Bar = "baz" }) {LF    Debug.WriteLine(@"bar } baz");LF}] - Gen<Stmt> - SpanEditHandler;Accepts:Any
        Keyword;[if];
        LeftParenthesis;[(];
        Keyword;[int];
        Whitespace;[ ];
        Identifier;[i];
        Whitespace;[ ];
        Assign;[=];
        Whitespace;[ ];
        IntegerLiteral;[0];
        Semicolon;[;];
        Whitespace;[ ];
        Identifier;[i];
        Whitespace;[ ];
        LessThan;[<];
        Whitespace;[ ];
        IntegerLiteral;[10];
        Semicolon;[;];
        Whitespace;[ ];
        Keyword;[new];
        Whitespace;[ ];
        Identifier;[Foo];
        Whitespace;[ ];
        LeftBrace;[{];
        Whitespace;[ ];
        Identifier;[Bar];
        Whitespace;[ ];
        Assign;[=];
        Whitespace;[ ];
        StringLiteral;["baz"];
        Whitespace;[ ];
        RightBrace;[}];
        RightParenthesis;[)];
        Whitespace;[ ];
        LeftBrace;[{];
        NewLine;[LF];
        Whitespace;[    ];
        Identifier;[Debug];
        Dot;[.];
        Identifier;[WriteLine];
        LeftParenthesis;[(];
        StringLiteral;[@"foo } bar"];
        RightParenthesis;[)];
        Semicolon;[;];
        NewLine;[LF];
        RightBrace;[}];
        Whitespace;[ ];
        Keyword;[else];
        Whitespace;[ ];
        Keyword;[if];
        LeftParenthesis;[(];
        Keyword;[int];
        Whitespace;[ ];
        Identifier;[i];
        Whitespace;[ ];
        Assign;[=];
        Whitespace;[ ];
        IntegerLiteral;[0];
        Semicolon;[;];
        Whitespace;[ ];
        Identifier;[i];
        Whitespace;[ ];
        LessThan;[<];
        Whitespace;[ ];
        IntegerLiteral;[10];
        Semicolon;[;];
        Whitespace;[ ];
        Keyword;[new];
        Whitespace;[ ];
        Identifier;[Foo];
        Whitespace;[ ];
        LeftBrace;[{];
        Whitespace;[ ];
        Identifier;[Bar];
        Whitespace;[ ];
        Assign;[=];
        Whitespace;[ ];
        StringLiteral;["baz"];
        Whitespace;[ ];
        RightBrace;[}];
        RightParenthesis;[)];
        Whitespace;[ ];
        LeftBrace;[{];
        NewLine;[LF];
        Whitespace;[    ];
        Identifier;[Debug];
        Dot;[.];
        Identifier;[WriteLine];
        LeftParenthesis;[(];
        StringLiteral;[@"bar } baz"];
        RightParenthesis;[)];
        Semicolon;[;];
        NewLine;[LF];
        RightBrace;[}];
        Whitespace;[ ];
        Keyword;[else];
        Whitespace;[ ];
        Keyword;[if];
        LeftParenthesis;[(];
        Keyword;[int];
        Whitespace;[ ];
        Identifier;[i];
        Whitespace;[ ];
        Assign;[=];
        Whitespace;[ ];
        IntegerLiteral;[0];
        Semicolon;[;];
        Whitespace;[ ];
        Identifier;[i];
        Whitespace;[ ];
        LessThan;[<];
        Whitespace;[ ];
        IntegerLiteral;[10];
        Semicolon;[;];
        Whitespace;[ ];
        Keyword;[new];
        Whitespace;[ ];
        Identifier;[Foo];
        Whitespace;[ ];
        LeftBrace;[{];
        Whitespace;[ ];
        Identifier;[Bar];
        Whitespace;[ ];
        Assign;[=];
        Whitespace;[ ];
        StringLiteral;["baz"];
        Whitespace;[ ];
        RightBrace;[}];
        RightParenthesis;[)];
        Whitespace;[ ];
        LeftBrace;[{];
        NewLine;[LF];
        Whitespace;[    ];
        Identifier;[Debug];
        Dot;[.];
        Identifier;[WriteLine];
        LeftParenthesis;[(];
        StringLiteral;[@"bar } baz"];
        RightParenthesis;[)];
        Semicolon;[;];
        NewLine;[LF];
        RightBrace;[}];
        Whitespace;[ ];
        Keyword;[else];
        Whitespace;[ ];
        Keyword;[if];
        LeftParenthesis;[(];
        Keyword;[int];
        Whitespace;[ ];
        Identifier;[i];
        Whitespace;[ ];
        Assign;[=];
        Whitespace;[ ];
        IntegerLiteral;[0];
        Semicolon;[;];
        Whitespace;[ ];
        Identifier;[i];
        Whitespace;[ ];
        LessThan;[<];
        Whitespace;[ ];
        IntegerLiteral;[10];
        Semicolon;[;];
        Whitespace;[ ];
        Keyword;[new];
        Whitespace;[ ];
        Identifier;[Foo];
        Whitespace;[ ];
        LeftBrace;[{];
        Whitespace;[ ];
        Identifier;[Bar];
        Whitespace;[ ];
        Assign;[=];
        Whitespace;[ ];
        StringLiteral;["baz"];
        Whitespace;[ ];
        RightBrace;[}];
        RightParenthesis;[)];
        Whitespace;[ ];
        LeftBrace;[{];
        NewLine;[LF];
        Whitespace;[    ];
        Identifier;[Debug];
        Dot;[.];
        Identifier;[WriteLine];
        LeftParenthesis;[(];
        StringLiteral;[@"bar } baz"];
        RightParenthesis;[)];
        Semicolon;[;];
        NewLine;[LF];
        RightBrace;[}];
        Whitespace;[ ];
        Keyword;[else];
        Whitespace;[ ];
        Keyword;[if];
        LeftParenthesis;[(];
        Keyword;[int];
        Whitespace;[ ];
        Identifier;[i];
        Whitespace;[ ];
        Assign;[=];
        Whitespace;[ ];
        IntegerLiteral;[0];
        Semicolon;[;];
        Whitespace;[ ];
        Identifier;[i];
        Whitespace;[ ];
        LessThan;[<];
        Whitespace;[ ];
        IntegerLiteral;[10];
        Semicolon;[;];
        Whitespace;[ ];
        Keyword;[new];
        Whitespace;[ ];
        Identifier;[Foo];
        Whitespace;[ ];
        LeftBrace;[{];
        Whitespace;[ ];
        Identifier;[Bar];
        Whitespace;[ ];
        Assign;[=];
        Whitespace;[ ];
        StringLiteral;["baz"];
        Whitespace;[ ];
        RightBrace;[}];
        RightParenthesis;[)];
        Whitespace;[ ];
        LeftBrace;[{];
        NewLine;[LF];
        Whitespace;[    ];
        Identifier;[Debug];
        Dot;[.];
        Identifier;[WriteLine];
        LeftParenthesis;[(];
        StringLiteral;[@"bar } baz"];
        RightParenthesis;[)];
        Semicolon;[;];
        NewLine;[LF];
        RightBrace;[}];
