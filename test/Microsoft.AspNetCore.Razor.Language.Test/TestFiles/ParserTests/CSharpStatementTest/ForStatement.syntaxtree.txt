Statement block - Gen<None> - 43 - (0:0,0)
    Transition span - Gen<None> - [@] - SpanEditHandler;Accepts:None - (0:0,0) - Symbols:1
        CSharpSymbolType.Transition;[@];
    Code span - Gen<Stmt> - [for(int i = 0; i++; i < length) { foo(); }] - SpanEditHandler;Accepts:None - (1:0,1) - Symbols:30
        CSharpSymbolType.Keyword;[for];
        CSharpSymbolType.LeftParenthesis;[(];
        CSharpSymbolType.Keyword;[int];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Identifier;[i];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Assign;[=];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.IntegerLiteral;[0];
        CSharpSymbolType.Semicolon;[;];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Identifier;[i];
        CSharpSymbolType.Increment;[++];
        CSharpSymbolType.Semicolon;[;];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Identifier;[i];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.LessThan;[<];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Identifier;[length];
        CSharpSymbolType.RightParenthesis;[)];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.LeftBrace;[{];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Identifier;[foo];
        CSharpSymbolType.LeftParenthesis;[(];
        CSharpSymbolType.RightParenthesis;[)];
        CSharpSymbolType.Semicolon;[;];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.RightBrace;[}];
