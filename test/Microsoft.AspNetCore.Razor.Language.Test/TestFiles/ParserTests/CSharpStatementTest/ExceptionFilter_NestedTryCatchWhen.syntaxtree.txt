Statement block - Gen<None> - 69 - (0:0,0)
    Transition span - Gen<None> - [@] - SpanEditHandler;Accepts:None - (0:0,0) - Symbols:1
        CSharpSymbolType.Transition;[@];
    MetaCode span - Gen<None> - [{] - SpanEditHandler;Accepts:None - (1:0,1) - Symbols:1
        CSharpSymbolType.LeftBrace;[{];
    Code span - Gen<Stmt> - [try { someMethod(); } catch(Exception) when (true) { handleIO(); }] - AutoCompleteEditHandler;Accepts:Any,AutoComplete:[<null>];AtEOL - (2:0,2) - Symbols:30
        CSharpSymbolType.Keyword;[try];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.LeftBrace;[{];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Identifier;[someMethod];
        CSharpSymbolType.LeftParenthesis;[(];
        CSharpSymbolType.RightParenthesis;[)];
        CSharpSymbolType.Semicolon;[;];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.RightBrace;[}];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Keyword;[catch];
        CSharpSymbolType.LeftParenthesis;[(];
        CSharpSymbolType.Identifier;[Exception];
        CSharpSymbolType.RightParenthesis;[)];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Keyword;[when];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.LeftParenthesis;[(];
        CSharpSymbolType.Keyword;[true];
        CSharpSymbolType.RightParenthesis;[)];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.LeftBrace;[{];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Identifier;[handleIO];
        CSharpSymbolType.LeftParenthesis;[(];
        CSharpSymbolType.RightParenthesis;[)];
        CSharpSymbolType.Semicolon;[;];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.RightBrace;[}];
    MetaCode span - Gen<None> - [}] - SpanEditHandler;Accepts:None - (68:0,68) - Symbols:1
        CSharpSymbolType.RightBrace;[}];
